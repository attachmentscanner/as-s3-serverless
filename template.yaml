AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description:
  Attachment Scanner S3 Serverless.
  Automatically scans the provided S3 bucket for viruses and malware whenever a
  file is uploaded (s3:ObjectCreated:*)

Metadata:
  AWS::ServerlessRepo::Application:
    Name: attachment-scanner-s3-serverless
    Description:
      Automatically scans the provided S3 bucket for viruses and malware whenever
      a file is uploaded (s3:ObjectCreated:*)
    Author: AttachmentScanner
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE.md
    ReadmeUrl: installation.md
    Labels:
      - antivirus
      - malware
      - attachment-scanner
      - s3
      - protection
      - security
    HomePageUrl: https://www.attachmentscanner.com/as-s3-serverless
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/attachmentscanner/as-s3-serverless

Parameters:
  AppBucketName:
    Type: String
    Description: >-
      The name of the S3 Bucket to add the event to.
      A scan will be created whenever an object is created in the bucket.
      Leave blank if you will connect the event yourself.
  AttachmentScannerAPIToken:
    Type: String
    Description: >-
      REQUIRED: Your AttachmentScanner API Token, obtained from www.attachmentscanner.com
  AttachmentScannerHost:
    Type: String
    Default: us-east-1.attachmentscanner.com
    Description: >-
      The HOST to send AttachmentScanner requests to.
    AllowedValues:
      - us-east-1.attachmentscanner.com
      - eu-west-1.attachmentscanner.com
      - ap-southeast-2.attachmentscanner.com
  AttachmentScannerAction:
    Type: String
    Description: >-
      The action to take if a scan result is `found`. Options are `LOG`, `DELETE`.
    Default: LOG
    AllowedValues:
      - LOG
      - TAG
      - DELETE

Resources:
  S3ScanFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/s3-scanner.s3AttachmentScannerHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 35
      Policies:
        S3FullAccessPolicy:
          BucketName: !Ref AppBucketName
      Environment:
        Variables:
          AS_HOST: !Ref AttachmentScannerHost
          AS_TOKEN: !Ref AttachmentScannerAPIToken
          AS_ACTION: !Ref AttachmentScannerAction
          AS_EXPIRY: 120
      # Events:
      #   S3NewObjectEvent:
      #     Type: S3
      #     Properties:
      #       Bucket: !Ref AppBucket
      #       Events: s3:ObjectCreated:*

  SetupEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/setup.setupEventHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 35
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - 's3:GetBucketNotification'
                - 's3:PutBucketNotification'
              Resource: !Sub 'arn:aws:s3:::${AppBucketName}'

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref S3ScanFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      # SourceArn: !Sub 'arn:aws:s3:::${AppBucketName}'

  AddEventTrigger:
    # Type: AWS::CloudFormation::CustomResource
    Type: Custom::CreateNotificationEventCustomResource
    Properties:
      ServiceToken: !GetAtt SetupEventFunction.Arn
      LambdaArn: !GetAtt S3ScanFunction.Arn
      Bucket: !Ref AppBucketName
      Stackname: !Ref AWS::StackName

  # Don't create the bucket for now
  # AppBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Ref AppBucketName
